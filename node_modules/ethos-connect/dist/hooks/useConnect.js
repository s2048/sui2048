import{useCallback as v,useEffect as o,useMemo as k,useRef as E,useState as w}from"react";import u from"../lib/log.js";import y from"./useWalletKit.js";import{Connection as C,JsonRpcProvider as P}from"@mysten/sui.js";import K from"../lib/lib.js";import{DEFAULT_CHAIN as A,DEFAULT_NETWORK as D}from"../lib/constants.js";import{WalletKitCoreConnectionStatus as N}from"@mysten/wallet-kit-core";const T=(n,S)=>{const t=E(!1),i=E({ethos:!1,extension:!1}),c=k(()=>{const e=typeof n?.network=="string"?n.network:D,r=new C({fullnode:e});return new P(r)},[n]),[d,m]=w({provider:null,signer:null}),{wallets:b,status:f,signer:p,getState:l,connect:h}=y({provider:c,defaultChain:n?.chain??A,preferredWallets:n?.preferredWallets,disableAutoConnect:n?.disableAutoConnect}),g=v(()=>{t.current=!1,i.current={ethos:!1,extension:!1},m(e=>({...e,signer:null}))},[]);o(()=>{t.current=!1,i.current={ethos:!1,extension:!1}},[n]),o(()=>{const{provider:e,signer:r}=d;if(!e&&!r)return;const a=l();a.isConnecting||a.isError||S&&S(d)},[f,d,S,l]);const s=v((e,r)=>{if(u("useConnect","trying to set providerAndSigner",r,t.current,i.current),t.current)return;r&&(i.current[r]=!0);const a=!Object.values(i.current).includes(!1);if(!(!e&&!a)){if(t.current=!!e,e){const x=e?.disconnect;e.disconnect=()=>{x(),g()}}m({provider:c,signer:e})}},[c,g]);return o(()=>{f===N.DISCONNECTED&&(i.current.extension=!1,t.current=!1,m(e=>({...e,signer:null})))},[f]),o(()=>{!n||u("mobile","listening to mobile connection from EthosConnectProvider")},[s,n]),o(()=>{if(!n)return;const e=l();u("useConnect","Setting providerAndSigner extension",e),!(e.isConnecting||e.isError)&&s(p,"extension")},[f,l,s,p,n]),o(()=>{if(!n)return;if(!n.apiKey){u("useConnect","Setting null providerAndSigner ethos"),s(null,"ethos");return}(async()=>{const r=await K.getEthosSigner({provider:c,defaultChain:n.chain??A});u("useConnect","Setting providerAndSigner ethos",r),s(r,"ethos")})()},[c,s,n]),{wallets:b,providerAndSigner:d,connect:h,getState:l}};var B=T;export{B as default};
