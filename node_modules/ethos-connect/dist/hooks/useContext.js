import{useCallback as N,useEffect as d,useMemo as f,useState as M}from"react";import O from"../lib/lib.js";import I from"../lib/log.js";import W from"./useAccount.js";import F from"./useConnect.js";import{EthosConnectStatus as c}from"../enums/EthosConnectStatus.js";import{DEFAULT_NETWORK as b,DEFAULT_CHAIN as J}from"../lib/constants.js";const w={network:b,chain:J,walletAppUrl:"https://ethoswallet.xyz"},L=({configuration:n,onWalletConnected:C})=>{const[t,T]=M({...w,...n}),[l,a]=M(!1),p=N(e=>{I("EthosConnectProvider","EthosConnectProvider Configuration:",e);const o={...w,...e};O.initializeEthos(o),T(i=>JSON.stringify(o)!==JSON.stringify(i)?o:i)},[]);d(()=>{O.initializeEthos(t)},[t]),d(()=>{!n||JSON.stringify(t)!==JSON.stringify(n)&&p(n)},[t,n]);const U=N(e=>{a(!1),C&&C(e)},[C]),{wallets:g,connect:A,providerAndSigner:s,getState:P}=F(t,U),{account:{address:m,contents:h},altAccount:E,setAltAccount:x}=W(s.signer,t?.network??b,t?.pollingInterval),y=f(()=>({isModalOpen:l,openModal:()=>{a(!0)},closeModal:()=>{a(!1)}}),[l,a]),S=f(()=>{const{provider:e,signer:o}=s,i=P();let r;o?.type==="hosted"?r=c.Connected:i.isConnecting?r=c.Loading:e&&i.isConnected?r=c.Connected:r=c.NoConnection;const v={status:r,wallets:g.map(u=>({...u,name:u.name,icon:u.icon})),selectWallet:A,provider:e,altAccount:E,setAltAccount:x};return o&&m&&(v.wallet={...o,address:m,contents:h}),v},[g,A,m,E,x,s,h,t]);return d(()=>{l?document.getElementsByTagName("html").item(0)?.setAttribute("style","overflow: hidden;"):document.getElementsByTagName("html").item(0)?.setAttribute("style","")},[l]),{...f(()=>({wallet:S,modal:y,providerAndSigner:s}),[S,y,s]),ethosConfiguration:t,init:p}};var et=L;export{et as default};
