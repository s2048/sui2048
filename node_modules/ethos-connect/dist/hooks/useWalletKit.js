import{useCallback as c,useEffect as P,useMemo as w,useRef as K,useSyncExternalStore as M}from"react";import{createWalletKitCore as U}from"@mysten/wallet-kit-core";import{UnsafeBurnerWalletAdapter as v,WalletStandardAdapterProvider as C}from"@mysten/wallet-adapter-all-wallets";import{SignerType as N}from"../types/Signer.js";import{DEFAULT_CHAIN as l}from"../lib/constants.js";const R=({defaultChain:s,provider:i,configuredAdapters:u,features:S,enableUnsafeBurner:y,preferredWallets:A,storageAdapter:T,storageKey:k,disableAutoConnect:B})=>{const W=w(()=>u??[new C({features:S}),...y?[new v]:[]],[u]),o=K(null);o.current||(o.current=U({adapters:W,preferredWallets:A,storageAdapter:T,storageKey:k}));const{wallets:g,status:p,currentWallet:e,accounts:m,currentAccount:n}=M(o.current.subscribe,o.current.getState,o.current.getState);P(()=>{B||o.current?.autoconnect()},[p,g]);const{autoconnect:L,...x}=o.current,f=c(t=>{if(!e||!n)throw new Error("No wallet connect to sign message");const r=t.account||n,a=t.chain||s||l;return e.signAndExecuteTransactionBlock({...t,account:r,chain:a})},[e,n,s]),d=c(t=>i.executeTransactionBlock(t),[i]),I=c(t=>{if(!e||!n)throw new Error("No wallet connect to sign message");const r=t.account||n,a=t.chain||s||l;return e.signTransactionBlock({...t,account:r,chain:a})},[e,n,s]),E=c(t=>{if(!e||!n)throw new Error("No wallet connect to sign message");const r=t.account||n,a=typeof t.message=="string"?new Uint8Array(Buffer.from(t.message,"utf8")):t.message;return e.signMessage({...t,message:a,account:r})},[e,n]),h=c(async t=>{if(!e||!n)throw new Error("No wallet connect to preapprove transactions");const r=window.ethosWallet;return!r||e.name!=="Ethos Wallet"?(console.log("Wallet does not support preapproval"),!1):(t.address||(t.address=n.address),t.chain||(t.chain=s??l),r.requestPreapproval(t))},[e,n,s]),b=w(()=>!e||!n?null:{type:N.Extension,name:e.name,icon:e.name==="Sui Wallet"?"https://sui.io/favicon.png":e.icon,getAddress:async()=>n?.address,accounts:m,currentAccount:n,signAndExecuteTransactionBlock:f,executeTransactionBlock:d,signTransactionBlock:I,requestPreapproval:h,signMessage:E,disconnect:()=>{e.disconnect(),o.current?.disconnect()},provider:i},[e,m,n,f,d,h,E,i]);return{wallets:g,status:p,signer:b,...x}};var st=R;export{st as default};
